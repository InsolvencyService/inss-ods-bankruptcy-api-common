variables:
- template: azure-app-parameters.yml
- template: azure-env-parameters.yml

pool:
  name: Azure Pipelines
  vmImage: 'windows-latest'
  demands:
  - msbuild
  - visualstudio

trigger:
  branches:
    include:
    - develop

name: 1.0$(Rev:.r)

stages:
- stage: Build
  displayName: Build, Test, Analyze, Pack Nuget
    
  jobs:
  - job: BuildDotNetNuget
    displayName: Build DotNet Nuget

    steps:
    - checkout: self

    - task: NuGetToolInstaller@0
      displayName: Use NuGet latest

    - task: NuGetCommand@2
      displayName: NuGet restore
      inputs:
        solution: ${{ variables.BuildSolution }}
        feedRestore: ${{ variables.AzureArtifactsFeed }}

    - task: VSBuild@1
      displayName: Build solution ${{ variables.SolutionName }}
      inputs:
        solution: ${{ variables.BuildSolution }}
        platform: ${{ variables.BuildPlatform }}
        configuration: ${{ variables.BuildConfiguration }}

    - task: VSTest@2
      displayName: VsTest - testAssemblies
      inputs:
        testAssemblyVer2: >-
          ${{ variables.UnitTestFilter }}
  
          !**\obj\**
        platform: ${{ variables.BuildPlatform }}
        configuration: ${{ variables.BuildConfiguration }}
        codeCoverageEnabled: true

    - task: NuGetCommand@2
      displayName: NuGet pack ${{ variables.SolutionName }}
      inputs:
        command: pack
        packagesToPack: ${{ variables.SolutionName }}/${{ variables.SolutionName }}.csproj
        versioningScheme: byBuildNumber
        configurationToPack: ${{ variables.BuildConfiguration }}

    - task: NuGetCommand@2
      displayName: NuGet push $(Build.BuildNumber)
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
      inputs:
        command: push
        packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: ${{ variables.AzureArtifactsFeed }}
