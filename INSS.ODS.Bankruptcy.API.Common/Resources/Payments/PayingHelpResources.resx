<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Payments_PayingHelp_BodyText" xml:space="preserve">
    <value>&lt;h2 class="heading-medium" style="margin-top:0;"&gt;How to pay&lt;/h2&gt;
&lt;p&gt;Payments can be made:&lt;/p&gt;
&lt;ul class="help"&gt;
    &lt;li&gt;online by debit, credit and prepaid cards&lt;/li&gt;
    &lt;li&gt;by cash at any NatWest branch&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;p&gt;You shouldn't use your own credit card to pay for your bankruptcy. If you can't pay the full fee yourself, you can also ask others to &lt;a href="/payments/payonbehalf"&gt;make online payments on your behalf.&lt;/a&gt;&lt;/p&gt;
&lt;br /&gt;

&lt;h3 class="heading-medium"&gt;Making a payment&lt;/h3&gt;
&lt;p&gt;
    To make an online payment while logged into your application, simply
    click the  &lt;a href="/payments/pay"&gt;Make a payment&lt;/a&gt; button at the top right hand corner of the &lt;a href="/application-overview/overview"&gt;application overview&lt;/a&gt; page.
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;
    Others who want to make an online payment on your behalf will need you to give them a unique &lt;a href="/payments/payonbehalf"&gt;payment reference number&lt;/a&gt;. You can
    use this same payment reference number to make a payment without logging in.
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;
    Applying for bankruptcy costs &lt;b&gt;£680&lt;/b&gt;.
    If you're paying online, you can pay the fee in one go or in
    as many instalments as you need.
&lt;/p&gt;
&lt;p&gt;For example, you could:&lt;/p&gt;
&lt;ul class="help"&gt;
    &lt;li&gt;make 5 monthly payments of £110 pounds each&lt;/li&gt;
    &lt;li&gt;make a final payment of £105&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;p&gt;The minimum payment by card is £5.&lt;/p&gt;


&lt;div class="panel-indent"&gt;
    Paying by instalments isn't available for cash payments, and you must cover the full fee in a single £680 payment.
&lt;/div&gt;

&lt;h3 class="heading-medium"&gt;Refunds&lt;/h3&gt;
&lt;p&gt;
    If you decide not to submit your application, you’ll receive a full refund of any
    money you have paid. Read our &lt;a href="/payments/refundpolicy"&gt;refund policy&lt;/a&gt; to find out more.
&lt;/p&gt;</value>
  </data>
  <data name="Payments_PayingHelp_Continue_Label" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="Payments_PayingHelp_MakeAPayment_Label" xml:space="preserve">
    <value>Make a payment</value>
  </data>
  <data name="Payments_PayingHelp_PageTitle" xml:space="preserve">
    <value>Paying the fee</value>
  </data>
  <data name="Payments_PayingHelp_RefundPolicy_Label" xml:space="preserve">
    <value>Refund policy</value>
  </data>
  <data name="Payments_PayingHelp_Return_LinkText" xml:space="preserve">
    <value>Return to my application</value>
  </data>
</root>