<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CompanyPartnershipTradingAddress_Address1_Hint" xml:space="preserve">
    <value>If your partnership doesn’t have a set trading address, enter your own. &lt;br/&gt;
For example, 12 Place Street.</value>
  </data>
  <data name="CompanyPartnershipTradingAddress_Address1_Label" xml:space="preserve">
    <value>Enter the first line of the latest address</value>
  </data>
  <data name="CompanyPartnershipTradingAddress_Address1_Length" xml:space="preserve">
    <value>First line of the address should be less than 100 characters</value>
  </data>
  <data name="CompanyPartnershipTradingAddress_Address1_Required" xml:space="preserve">
    <value>Please enter your partnership address</value>
  </data>
  <data name="CompanyPartnershipTradingAddress_DateStarted_Help" xml:space="preserve">
    <value>When did the business start trading from this address?</value>
  </data>
  <data name="CompanyPartnershipTradingAddress_DateStarted_Hint" xml:space="preserve">
    <value>For example Aug 2012</value>
  </data>
  <data name="CompanyPartnershipTradingAddress_DateStarted_Label" xml:space="preserve">
    <value>When did the business start trading from this address?</value>
  </data>
  <data name="CompanyPartnershipTradingAddress_TradingAtAddressStartDate_After_1900" xml:space="preserve">
    <value>Date business started trading from this address must be after 1900</value>
  </data>
  <data name="CompanyPartnershipTradingAddress_TradingAtAddressStartDate_In_The_Past" xml:space="preserve">
    <value>Date business started trading from this address must be in the past</value>
  </data>
  <data name="CompanyPartnershipTradingAddress_DateStarted_Required" xml:space="preserve">
    <value>Please enter the date the business started trading from this address</value>
  </data>
  <data name="CompanyPartnershipTradingAddress_TradingAtAddressStoppedDate_After_1900" xml:space="preserve">
    <value>Date business stopped trading from this address must be after 1900</value>
  </data>
  <data name="CompanyPartnershipTradingAddress_TradingAtAddressStoppedDate_In_The_Past" xml:space="preserve">
    <value>Date business stopped trading from this address must be in the past</value>
  </data>
  <data name="CompanyPartnershipTradingAddress_DateStopped_Before_DateStarted_Error" xml:space="preserve">
    <value>Date You Stopped Trading Must Be After The Date You Started Trading</value>
  </data>
  <data name="CompanyPartnershipTradingAddress_DateStopped_Help" xml:space="preserve">
    <value>Date you stopped working for this employer</value>
  </data>
  <data name="CompanyPartnershipTradingAddress_DateStopped_Hint" xml:space="preserve">
    <value>For example, Aug 2012 &lt;br&gt;Leave blank if it's still trading</value>
  </data>
  <data name="CompanyPartnershipTradingAddress_DateStopped_Label" xml:space="preserve">
    <value>When did the business stop trading from this address?</value>
  </data>
  <data name="CompanyPartnershipTradingAddress_PageTitle" xml:space="preserve">
    <value>Partnership address details</value>
  </data>
  <data name="CompanyPartnershipTradingAddress_Title1" xml:space="preserve">
    <value>The table above summarises the business addresses you have told us about.</value>
  </data>
  <data name="CompanyPartnershipTradingAddress_Title2" xml:space="preserve">
    <value>We need to know about all the addresses your business has traded from since your debts started.</value>
  </data>
  <data name="CompanyPartnershipTradingAddress_TradingAtAddressStartedDate_AfterPartnershipTradingStartedDate" xml:space="preserve">
    <value>Trading started date must be after the partnership  started date</value>
  </data>
  <data name="CompanyPartnershipTradingAddress_TradingAtAddressStoppedDate_AfterPartnershipTradingStoppedDate" xml:space="preserve">
    <value>Trading stopped date must be before the partnership  stopped date</value>
  </data>
</root>