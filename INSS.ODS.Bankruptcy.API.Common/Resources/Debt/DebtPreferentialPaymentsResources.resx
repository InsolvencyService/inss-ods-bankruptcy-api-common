<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Debt_DebtPreferentialPayments_Page_Title" xml:space="preserve">
    <value>Preferential payments</value>
  </data>
  <data name="Debt_DebtPreferentialPayments_CreditorName_Label" xml:space="preserve">
    <value>Enter the name of a creditor you made a preferential payment to</value>
  </data>
  <data name="Debt_DebtPreferentialPayments_CreditorName_Hint" xml:space="preserve">
    <value>For example, ABC Bank Ltd or John Smith.  You can add more creditors later.</value>
  </data>
  <data name="Debt_DebtPreferentialPayments_Page_ParagraphOne" xml:space="preserve">
    <value>We need to know about any preferential payments you have made in the last 2 years.</value>
  </data>
  <data name="Debt_DebtPreferentialPayments_CreditorName_Error_Empty" xml:space="preserve">
    <value>Please enter the creditor's name</value>
  </data>
  <data name="Debt_DebtPreferentialPayments_CreditorName_Error_TooLong" xml:space="preserve">
    <value>The creditor name is too long. Please answer in less than 51 characters.</value>
  </data>
  <data name="Debt_DebtPreferentialPayments_CreditorName_Error_TooShort" xml:space="preserve">
    <value>The creditor name is too short. Please answer in more than 2 characters.</value>
  </data>
  <data name="Debt_DebtPreferentialPayments_AddAnotherCreditorName_Label" xml:space="preserve">
    <value>Enter the name of another creditor you made a preferential payment to</value>
  </data>
  <data name="Debt_DebtPreferentialPayments_AddPreferredCreditorButton_Label" xml:space="preserve">
    <value>Add creditor</value>
  </data>
  <data name="Debt_DebtPreferentialPayments_ContinueAllRelevantCreditorsAddedButton_Label" xml:space="preserve">
    <value>Continue - I have added all my relevant creditors</value>
  </data>
  <data name="Debt_DebtPreferentialPayments_ContinueNoPreferentialPaymentsToAddButton_Label" xml:space="preserve">
    <value>Continue – I haven't made any preferential payments</value>
  </data>
  <data name="Debt_DebtPreferentialPayments_Page_HasItems_ParagraphOne" xml:space="preserve">
    <value>The table above summarises the preferential payments you have told us about.</value>
  </data>
  <data name="Debt_DebtPreferentialPayments_Page_HasItems_ParagraphTwo" xml:space="preserve">
    <value>We need to know about any another preferential payments you have made in the last 2 years.</value>
  </data>
  <data name="Debt_DebtPreferentialPayments_PreferentialPayment_DeleteItem_Label" xml:space="preserve">
    <value>preferential payment</value>
  </data>
  <data name="Debt_DebtPreferentialPayments_CreditorName_Error_WrongButtonPressed" xml:space="preserve">
    <value>Do you want to add the creditor you typed in below? To add this creditor, please select the green 'Add creditor' button.</value>
  </data>
  <data name="Debt_DebtPreferentialPayments_AnotherCreditorName_Hint" xml:space="preserve">
    <value>For example, ABC Bank Ltd or John Smith.</value>
  </data>
  <data name="Debt_DebtPreferentialPayments_AddPreferredCreditorButton_Label_Alt" xml:space="preserve">
    <value>Add another creditor</value>
  </data>
</root>